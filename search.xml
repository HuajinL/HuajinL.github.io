<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于hexo框架搭建自己的博客(windows10)</title>
    <url>/2020/06/14/%E5%9F%BA%E4%BA%8Ehexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2(windows10)/</url>
    <content><![CDATA[<p>在此感谢up主<a href="https://www.bilibili.com/video/av44544186" target="_blank" rel="noopener">https://www.bilibili.com/video/av44544186</a> 视屏的教学</p>
<h1 id="基于hexo框架搭建自己的博客-windows10"><a href="#基于hexo框架搭建自己的博客-windows10" class="headerlink" title="基于hexo框架搭建自己的博客(windows10)"></a>基于hexo框架搭建自己的博客(windows10)</h1><a id="more"></a>

<p>前期软件准备  </p>
<p>1、安装git(<a href="https://git-scm.com/download/win),傻瓜式安装就好，next下一步" target="_blank" rel="noopener">https://git-scm.com/download/win),傻瓜式安装就好，next下一步</a></p>
<p>2、安装node.js(因为hexo框架基于node),地址在这(<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a>)  </p>
<p>安装hexo</p>
<p>1、首先查看git与node是否安装好，采用命令(git -v    node -v)查看有无版本号</p>
<p>2、接下来安装cnpm(npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener">https://registry.npm.taobao.org/</a>)(选择镜像到淘宝因为cnpm在国内的下载速度很慢,安好后用 cnpm -v查看)</p>
<p>3、用安装好的cnpm安装hexo(cnpm install -g hexo-cli),同样采用(hexo -v)查看</p>
<p>4、现在需要本地搭建，首先用pwd命令查看当前文件夹，可以用cd命令到你想要放置的文件夹采用mkdir命令创建一个新的文件夹(我用的是blog)，用命令pwd查看当前文件夹，如果已经在blog文件夹下则不需要任何操作，如不在，用cd命令定位到blog文件夹下</p>
<p>5、采用hexo init命令，在输入命令之后等待一会，最后一行出现(INFO Start blogging with Hex)则表明成功，此时在文件夹blog就可以看到八到九个文件夹了，此时基于hexo框架的博客就已经在本地搭好了(只是在本地搭建好了哦)</p>
<p>6、输入hexo s命令显示</p>
<p>INFO  Start processing<br>INFO  Hexo is running at <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> . Press Ctrl+C to stop.则表明成功</p>
<p>7、在浏览器中输入<a href="http://localhost:4000则可以看到自己在本地搭建好的博客">http://localhost:4000则可以看到自己在本地搭建好的博客</a></p>
<p>部署到GitHub下期再见</p>
<p>“愿你我仍在平凡的世界里还是那个不被人理解和不循规蹈矩的创造者”</p>
]]></content>
  </entry>
  <entry>
    <title>枯叶之下__LHJ</title>
    <url>/2020/06/14/%E6%9E%AF%E5%8F%B6%E4%B9%8B%E4%B8%8B__LHJ/</url>
    <content><![CDATA[<p>tags: 语录</p>
<h1 id="欢迎来到枯叶之下的博客"><a href="#欢迎来到枯叶之下的博客" class="headerlink" title="欢迎来到枯叶之下的博客"></a>欢迎来到枯叶之下的博客</h1><h2 id="经典语录："><a href="#经典语录：" class="headerlink" title="经典语录："></a>经典语录：</h2><p>“愿你我仍在平凡的世界里还是那个不被人理解和不循规蹈矩的创造者”</p>
<a id="more"></a>

<p>“希望大家在有能力的时候，尽量帮助到其他的人”</p>
<p>“真实的自己就已经足够精彩了，没有必要为了迎合谁去做一个人设”<br>“总不能让别人来决定自己的人生吧”<br>“我不知道我们互相可以再陪伴对方多久，许多年之后，再听到这首歌的时候，希望大家可以想到这个夜晚，希望那个时候你也还是像现在一样身边有人，不会觉得孤单”<br>“无论你过去曾是谁，现在是谁，未来会是谁，爱你的喜欢你所有的样子，只愿你平安，只愿你快乐”<br>“每个人都认为自己是特别的那个点，但是走入人群中，就汇入人流里”</p>
<p>“这个世界上,还有很多不被认可的梦想,不被祝福的感情,不被眷顾的孩子,他们不曾犯错,却只能颤颤巍巍,单薄地行走在路上，这首歌送给他们,借天地万物,不求终将到达某处,只求路上少些阻碍,让他们通往平凡”<br>“每个歌手都有自己的特别之处，我只是恰好会写歌，既然喜欢，那就去做”<br>“人的本质不是喜欢钱，而是钱予人的自由<br>如果这个世界上所有东西都由我来支配的话<br>我根本不需要钱”<br>“内向不是性格缺陷，只是性格的一种”<br>“总有一种感情，让你不求回报地想给予对方一切让你对未来充满期待，它可能不够轰轰烈烈，也未必会天荒地老但只要你未来某天想起它时，心里还会浮起一丝暖意，这便是它的全部意义”<br>“你越来越往后走，发现其实自己也没有什么不同这种泯然众生的感觉，有点不甘心”<br>“我不觉得现在这个时代会有人被埋没到和自己的实力相差的特别远的程度”<br>“作品本身不是一个很适合竞赛的作品我不会说因为我这场赢了，或者输了就调整歌曲服务现场我觉得这个就失去本身你创作的目的了<br>我们不是为了比赛作这首歌这首歌最本真的样子是我们想跟大家表达的，作品留下来是最重要的”<br>“我拒绝给我的人生设限”<br>“我永远感谢那个时候的自己<br>想和他说一句，辛苦了”<br>“坚持梦想和好好生活是不冲突的”<br>“如果有一天我变得很有钱<br>我会买下所有难得一见的笑脸<br>让所有可怜的孩子不再胆怯<br>所有邪恶的人不再掌握话语权”<br>“四十岁就是新的二十岁”<br>“你要允许一些人有安静的青春”<br>“做你想做的事情，每条路都有每条路的风景”<br>“坚持不了的就放弃，也不要觉得它痛苦<br>然后又要去坚持它<br>追求梦想一定是能够给你带来快乐的<br>快乐大于痛苦的时候你才要去坚持它”<br>“男生应该怎么样，女生应该怎么样<br>这种个人观点太强烈的，不符合我们时代对多样性的要求”<br>“每时每刻的我都是真实的我的一部分<br>每时每刻展示出来的都不一样<br>正是这些片段和片刻组成了一个完整的我” ​<br>“如果不想改变的话，请你不要改变”<br>“可时光啊，不听话，总催着人长大<br>这一站到下一站旅途总是停不下”<br>“我理解粉丝们为了支持他做的事情，更是心怀感激，因为爱一个人，任何行为都不为过，他们是最爱我的人”<br>“当你跟别人意见不同想争辩时，其实想想对错也没那么重要”<br>“希望大家都可以不用因为没钱去做自己不喜欢的事”<br>“比赛结果只是一时的，作品放在那里，只要有人听，有人懂，那就是有意义的”<br>“任何故事都让我变成现在的我<br>所以你们只了解我的现在就可以了”<br>“如果他喜欢的是变成明星之后的我<br>那他就不会喜欢之前的我<br>他既然喜欢了，为什么又要要求我像其他明星一样呢”<br>“给我个机会重来一次，我也不会想要去改变什么，因为有遗憾，才能显出来那些不遗憾的好”</p>
]]></content>
  </entry>
  <entry>
    <title>Android基础知识（导航）</title>
    <url>/2020/06/14/Android%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E5%AF%BC%E8%88%AA%EF%BC%89/</url>
    <content><![CDATA[<h3 id="Android基础知识"><a href="#Android基础知识" class="headerlink" title="Android基础知识"></a>Android基础知识</h3><h4 id="一、导航"><a href="#一、导航" class="headerlink" title="一、导航"></a>一、导航</h4><a id="more"></a>

<h5 id="1、页面跳转主要代码"><a href="#1、页面跳转主要代码" class="headerlink" title="1、页面跳转主要代码"></a>1、页面跳转主要代码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NavController coloController &#x3D; Navigation.findNavController(v);</span><br><span class="line">coloController.navigate(R.id.action_detialFragment_to_homeFragment);</span><br></pre></td></tr></table></figure>

<h5 id="2、页面跳转传递数据主要代码"><a href="#2、页面跳转传递数据主要代码" class="headerlink" title="2、页面跳转传递数据主要代码"></a>2、页面跳转传递数据主要代码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">EditText editText &#x3D; getView().findViewById(R.id.editText);</span><br><span class="line">String string &#x3D; editText.getText().toString();</span><br><span class="line">if(TextUtils.isEmpty(string))&#123;  </span><br><span class="line">Toast.makeText(getActivity(), &quot;请输入姓名&quot;,Toast.LENGTH_SHORT).show(); </span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">Bundle bundle &#x3D; new Bundle();</span><br><span class="line">bundle.putString(&quot;my_name&quot;,string);</span><br><span class="line">NavController controller &#x3D; Navigation.findNavController(v);</span><br><span class="line">controller.navigate(R.id.action_homeFragment_to_detialFragment,bundle);</span><br><span class="line"></span><br><span class="line">String string &#x3D; getArguments().getString(&quot;my_name&quot;);</span><br><span class="line">TextView textView2 &#x3D; getView().findViewById(R.id.textView2);</span><br><span class="line">textView2.setText(string);</span><br></pre></td></tr></table></figure>

<h5 id="3、基于ViewModel传递数据主要代码"><a href="#3、基于ViewModel传递数据主要代码" class="headerlink" title="3、基于ViewModel传递数据主要代码"></a>3、基于ViewModel传递数据主要代码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">final MyViewModel myViewModel;</span><br><span class="line">myViewModel &#x3D; ViewModelProviders.of(getActivity()).get(MyViewModel.class);</span><br><span class="line">FragmentMasterBinding binding;</span><br><span class="line">binding &#x3D; DataBindingUtil.inflate(inflater,R.layout.fragment_master,container,false);</span><br><span class="line">binding.setData(myViewModel);</span><br><span class="line">binding.setLifecycleOwner(getActivity());</span><br><span class="line">binding.button.setOnClickListener(new View.OnClickListener() &#123;   </span><br><span class="line">@Override</span><br><span class="line">public void onClick(View v) &#123;        </span><br><span class="line">NavController  controller &#x3D; Navigation.findNavController(v);        controller.navigate(R.id.action_masterFragment_to_detailFragment);    &#125;&#125;);</span><br><span class="line">return binding.getRoot();</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
