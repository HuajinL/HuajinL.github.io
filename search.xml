<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android 基础知识</title>
    <url>/2019/11/10/Android%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E5%AF%BC%E8%88%AA%EF%BC%89/</url>
    <content><![CDATA[<h3 id="Android基础知识"><a href="#Android基础知识" class="headerlink" title="Android基础知识"></a>Android基础知识</h3><h4 id="一、导航"><a href="#一、导航" class="headerlink" title="一、导航"></a>一、导航</h4><a id="more"></a>

<h5 id="1、页面跳转主要代码"><a href="#1、页面跳转主要代码" class="headerlink" title="1、页面跳转主要代码"></a>1、页面跳转主要代码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NavController coloController &#x3D; Navigation.findNavController(v);</span><br><span class="line">coloController.navigate(R.id.action_detialFragment_to_homeFragment);</span><br></pre></td></tr></table></figure>

<h5 id="2、页面跳转传递数据主要代码"><a href="#2、页面跳转传递数据主要代码" class="headerlink" title="2、页面跳转传递数据主要代码"></a>2、页面跳转传递数据主要代码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">EditText editText &#x3D; getView().findViewById(R.id.editText);</span><br><span class="line">String string &#x3D; editText.getText().toString();</span><br><span class="line">if(TextUtils.isEmpty(string))&#123;  </span><br><span class="line">Toast.makeText(getActivity(), &quot;请输入姓名&quot;,Toast.LENGTH_SHORT).show(); </span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">Bundle bundle &#x3D; new Bundle();</span><br><span class="line">bundle.putString(&quot;my_name&quot;,string);</span><br><span class="line">NavController controller &#x3D; Navigation.findNavController(v);</span><br><span class="line">controller.navigate(R.id.action_homeFragment_to_detialFragment,bundle);</span><br><span class="line"></span><br><span class="line">String string &#x3D; getArguments().getString(&quot;my_name&quot;);</span><br><span class="line">TextView textView2 &#x3D; getView().findViewById(R.id.textView2);</span><br><span class="line">textView2.setText(string);</span><br></pre></td></tr></table></figure>

<h5 id="3、基于ViewModel传递数据主要代码"><a href="#3、基于ViewModel传递数据主要代码" class="headerlink" title="3、基于ViewModel传递数据主要代码"></a>3、基于ViewModel传递数据主要代码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">final MyViewModel myViewModel;</span><br><span class="line">myViewModel &#x3D; ViewModelProviders.of(getActivity()).get(MyViewModel.class);</span><br><span class="line">FragmentMasterBinding binding;</span><br><span class="line">binding &#x3D; DataBindingUtil.inflate(inflater,R.layout.fragment_master,container,false);</span><br><span class="line">binding.setData(myViewModel);</span><br><span class="line">binding.setLifecycleOwner(getActivity());</span><br><span class="line">binding.button.setOnClickListener(new View.OnClickListener() &#123;   </span><br><span class="line">@Override</span><br><span class="line">public void onClick(View v) &#123;        </span><br><span class="line">NavController  controller &#x3D; Navigation.findNavController(v);        controller.navigate(R.id.action_masterFragment_to_detailFragment);    &#125;&#125;);</span><br><span class="line">return binding.getRoot();</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>安卓</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>安卓</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC连接数据库</title>
    <url>/2019/12/02/JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<div class="note success">
            <p>本文章均由作者码字，来之不易，请勿私自转载。</p>
          </div>

<h2 id="JDBC连接数据库Mysql"><a href="#JDBC连接数据库Mysql" class="headerlink" title="JDBC连接数据库Mysql"></a>JDBC连接数据库Mysql</h2><h3 id="JDBC-是由Java语言编写的接口和类，编写JDBC可以使Java代码连接到数据库，从而实现对数据库的数据进行操作。"><a href="#JDBC-是由Java语言编写的接口和类，编写JDBC可以使Java代码连接到数据库，从而实现对数据库的数据进行操作。" class="headerlink" title="JDBC 是由Java语言编写的接口和类，编写JDBC可以使Java代码连接到数据库，从而实现对数据库的数据进行操作。"></a>JDBC 是由Java语言编写的接口和类，编写JDBC可以使Java代码连接到数据库，从而实现对数据库的数据进行操作。</h3><h4 id="1、JDBC的主要功能"><a href="#1、JDBC的主要功能" class="headerlink" title="1、JDBC的主要功能"></a>1、JDBC的主要功能</h4><ul>
<li><p>建立与数据库或者其他数据源的连接</p>
</li>
<li><p>向数据库发送SQL命令</p>
</li>
<li><p>处理数据库的返回结果</p>
</li>
</ul>
<h4 id="2、JDBC常用的接口和类"><a href="#2、JDBC常用的接口和类" class="headerlink" title="2、JDBC常用的接口和类"></a>2、JDBC常用的接口和类</h4><ul>
<li><p>Connection（连接数据库）</p>
</li>
<li><p>Statement（建立操作指令）</p>
</li>
<li><p>executeQuery（执行查询命令）</p>
</li>
<li><p>ResultSet（返回结果集）</p>
<h4 id="3、JDBC连接数据库步骤"><a href="#3、JDBC连接数据库步骤" class="headerlink" title="3、JDBC连接数据库步骤"></a>3、JDBC连接数据库步骤</h4></li>
<li><p>声明初始化变量</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数据用户名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String USER = <span class="string">"root"</span>;</span><br><span class="line">    <span class="comment">//数据库密码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String PASSWORD = <span class="string">"123456"</span>;</span><br><span class="line">    <span class="comment">//数据库位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String URL = <span class="string">"jdbc:mysql://localhost:3306/choose?    useUnicode=true&amp;characterEncoding=UTF8"</span>;</span><br><span class="line">    <span class="comment">//驱动位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String DIRVER = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>加载驱动连接数据库</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//加载mysql驱动</span></span><br><span class="line">Class.forName(DIRVER);</span><br><span class="line"><span class="comment">//获取连接传入用户名，密码和数据库位置</span></span><br><span class="line">conn = DriverManager.getConnection(URL, USER, PASSWORD);</span><br></pre></td></tr></table></figure>

<ul>
<li>编写一个方法测试连接成功与否</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">    Connection conn = <span class="keyword">null</span>;</span><br><span class="line">    conn = getConnection();</span><br><span class="line">    <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">//主函数测试jdbc，成功则跳出提示框</span></span><br><span class="line">        JOptionPane.showMessageDialog(<span class="keyword">null</span>, <span class="string">"连接成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">//测试完成后关闭连接</span></span><br><span class="line">   closeConnection(conn);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jdbc</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建Hexo博客</title>
    <url>/2019/09/05/%E5%9F%BA%E4%BA%8Ehexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2(windows10)/</url>
    <content><![CDATA[<hr>
<p>在此感谢up主<a href="https://www.bilibili.com/video/av44544186" target="_blank" rel="noopener">https://www.bilibili.com/video/av44544186</a> 视屏的教学</p>
<h1 id="基于hexo框架搭建自己的博客-windows10"><a href="#基于hexo框架搭建自己的博客-windows10" class="headerlink" title="基于hexo框架搭建自己的博客(windows10)"></a>基于hexo框架搭建自己的博客(windows10)</h1><ul>
<li>前期软件准备  </li>
</ul>
<p>1、安装git[<a href="https://git-scm.com/download/win]" target="_blank" rel="noopener">https://git-scm.com/download/win]</a></p>
<p>2、安装node.js(因为hexo框架基于node),地址在这[<a href="https://nodejs.org/en/]" target="_blank" rel="noopener">https://nodejs.org/en/]</a></p>
<ul>
<li>安装hexo</li>
</ul>
<p>1、首先查看git与node是否安装好，采用命令(git -v    node -v)查看有无版本号</p>
<p>2、接下来安装cnpm(npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener">https://registry.npm.taobao.org/</a>) (选择镜像到淘宝因为cnpm在国内的下载速度很慢,安好后用 cnpm -v查看)</p>
<p>3、用安装好的cnpm安装hexo(cnpm install -g hexo-cli),同样采用(hexo -v)查看</p>
<p>4、现在需要本地搭建，首先用pwd命令查看当前文件夹，可以用cd命令到你想要放置的文件夹采用mkdir命令创建一个新的文件夹(我用的是blog)，用命令pwd查看当前文件夹，如果已经在blog文件夹下则不需要任何操作，如不在，用cd命令定位到blog文件夹下</p>
<p>5、采用hexo init命令，在输入命令之后等待一会，最后一行出现(INFO Start blogging with Hex)则表明成功，此时在文件夹blog就可以看到八到九个文件夹了，此时基于hexo框架的博客就已经在本地搭好了(只是在本地搭建好了哦)</p>
<p>6、输入hexo s命令显示</p>
<p>INFO  Start processing<br>INFO  Hexo is running at <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> . Press Ctrl+C to stop.则表明成功</p>
<p>7、在浏览器中输入<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>   则可以看到自己在本地搭建好的博客</p>
<hr>
<p>“愿你我仍在平凡的世界里还是那个不被人理解和不循规蹈矩的创造者”</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>重装系统重新部署Hexo</title>
    <url>/2020/06/20/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8E%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2Hexo%20blog/</url>
    <content><![CDATA[<h1 id="重装系统后重新部署Hexo-blog"><a href="#重装系统后重新部署Hexo-blog" class="headerlink" title="重装系统后重新部署Hexo blog"></a>重装系统后重新部署Hexo blog</h1><h3 id="1、安装Git和Node-js"><a href="#1、安装Git和Node-js" class="headerlink" title="1、安装Git和Node.js"></a>1、安装Git和Node.js</h3><h3 id="2、生成ssh密钥"><a href="#2、生成ssh密钥" class="headerlink" title="2、生成ssh密钥"></a>2、生成ssh密钥</h3><ul>
<li><p>配置Git个人信息和生成ssh密钥</p>
</li>
<li><p>打开Git bash ,输入</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"xxxxxx"</span></span><br><span class="line">git config --global user.email <span class="string">"xxxxxx@xx.com"</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"xxxxxx@xx.com"</span></span><br></pre></td></tr></table></figure>

<ul>
<li>此上命令中xxxxxx为自己GItHub资料</li>
</ul>
<h3 id="3、设置-Github-的-ssh-密钥"><a href="#3、设置-Github-的-ssh-密钥" class="headerlink" title="3、设置 Github 的 ssh 密钥"></a>3、设置 Github 的 ssh 密钥</h3><ul>
<li>运行完上列命令后，会在  C:\Users\主用户里面出现  .ssh 文件夹，里面有id_rsa 和     id_rsa.pub两个文件夹，复制id_rsa.pub的内容。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/HuajinL/PhotoPlace@latest/2020/06/21/09cc6a6c7b9a2c657d81afcdbd74fa2f.png" alt=""></p>
<h3 id="4、打开Github网页，依次是-右上角Settings-SSH-and-GPG-keys-New-SSH-key-把复制的内容粘贴到-Key-栏，然后保存。"><a href="#4、打开Github网页，依次是-右上角Settings-SSH-and-GPG-keys-New-SSH-key-把复制的内容粘贴到-Key-栏，然后保存。" class="headerlink" title="4、打开Github网页，依次是 右上角Settings - SSH and GPG keys - New SSH key 把复制的内容粘贴到 Key 栏，然后保存。"></a>4、打开Github网页，依次是 右上角Settings - SSH and GPG keys - New SSH key 把复制的内容粘贴到 Key 栏，然后保存。</h3><p><img src="https://cdn.jsdelivr.net/gh/HuajinL/PhotoPlace@latest/2020/06/21/51c6d6332aaa72d33a7837ac43c9490f.png" alt=""></p>
<h3 id="5、安装-Hexo-Git-bash"><a href="#5、安装-Hexo-Git-bash" class="headerlink" title="5、安装  Hexo  Git bash"></a>5、安装  Hexo  Git bash</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<h3 id="6、打开原有博客文件，保留-config-yml，theme-，source-，scaffolds-，package-json，-gitignore-。"><a href="#6、打开原有博客文件，保留-config-yml，theme-，source-，scaffolds-，package-json，-gitignore-。" class="headerlink" title="6、打开原有博客文件，保留_config.yml，theme/，source/，scaffolds/，package.json，.gitignore 。"></a>6、打开原有博客文件，保留_config.yml，theme/，source/，scaffolds/，package.json，.gitignore 。</h3><h3 id="7、安装依赖文件"><a href="#7、安装依赖文件" class="headerlink" title="7、安装依赖文件"></a>7、安装依赖文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h3 id="8、安装部署插件"><a href="#8、安装部署插件" class="headerlink" title="8、安装部署插件"></a>8、安装部署插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<h3 id="9、运行测试"><a href="#9、运行测试" class="headerlink" title="9、运行测试"></a>9、运行测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>经典语录</title>
    <url>/2019/10/10/%E6%9E%AF%E5%8F%B6%E4%B9%8B%E4%B8%8B__LHJ/</url>
    <content><![CDATA[<h1 id="欢迎来到枯叶之下的博客"><a href="#欢迎来到枯叶之下的博客" class="headerlink" title="欢迎来到枯叶之下的博客"></a>欢迎来到枯叶之下的博客</h1><h2 id="经典语录："><a href="#经典语录：" class="headerlink" title="经典语录："></a>经典语录：</h2><p>“愿你我仍在平凡的世界里还是那个不被人理解和不循规蹈矩的创造者”</p>
<a id="more"></a>

<p>“希望大家在有能力的时候，尽量帮助到其他的人”</p>
<p>“真实的自己就已经足够精彩了，没有必要为了迎合谁去做一个人设”<br>“总不能让别人来决定自己的人生吧”<br>“我不知道我们互相可以再陪伴对方多久，许多年之后，再听到这首歌的时候，希望大家可以想到这个夜晚，希望那个时候你也还是像现在一样身边有人，不会觉得孤单”<br>“无论你过去曾是谁，现在是谁，未来会是谁，爱你的喜欢你所有的样子，只愿你平安，只愿你快乐”<br>“每个人都认为自己是特别的那个点，但是走入人群中，就汇入人流里”</p>
<p>“这个世界上,还有很多不被认可的梦想,不被祝福的感情,不被眷顾的孩子,他们不曾犯错,却只能颤颤巍巍,单薄地行走在路上，这首歌送给他们,借天地万物,不求终将到达某处,只求路上少些阻碍,让他们通往平凡”<br>“每个歌手都有自己的特别之处，我只是恰好会写歌，既然喜欢，那就去做”<br>“人的本质不是喜欢钱，而是钱予人的自由<br>如果这个世界上所有东西都由我来支配的话<br>我根本不需要钱”<br>“内向不是性格缺陷，只是性格的一种”<br>“总有一种感情，让你不求回报地想给予对方一切让你对未来充满期待，它可能不够轰轰烈烈，也未必会天荒地老但只要你未来某天想起它时，心里还会浮起一丝暖意，这便是它的全部意义”<br>“你越来越往后走，发现其实自己也没有什么不同这种泯然众生的感觉，有点不甘心”<br>“我不觉得现在这个时代会有人被埋没到和自己的实力相差的特别远的程度”<br>“作品本身不是一个很适合竞赛的作品我不会说因为我这场赢了，或者输了就调整歌曲服务现场我觉得这个就失去本身你创作的目的了<br>我们不是为了比赛作这首歌这首歌最本真的样子是我们想跟大家表达的，作品留下来是最重要的”<br>“我拒绝给我的人生设限”<br>“我永远感谢那个时候的自己<br>想和他说一句，辛苦了”<br>“坚持梦想和好好生活是不冲突的”<br>“如果有一天我变得很有钱<br>我会买下所有难得一见的笑脸<br>让所有可怜的孩子不再胆怯<br>所有邪恶的人不再掌握话语权”<br>“四十岁就是新的二十岁”<br>“你要允许一些人有安静的青春”<br>“做你想做的事情，每条路都有每条路的风景”<br>“坚持不了的就放弃，也不要觉得它痛苦<br>然后又要去坚持它<br>追求梦想一定是能够给你带来快乐的<br>快乐大于痛苦的时候你才要去坚持它”<br>“男生应该怎么样，女生应该怎么样<br>这种个人观点太强烈的，不符合我们时代对多样性的要求”<br>“每时每刻的我都是真实的我的一部分<br>每时每刻展示出来的都不一样<br>正是这些片段和片刻组成了一个完整的我” ​<br>“如果不想改变的话，请你不要改变”<br>“可时光啊，不听话，总催着人长大<br>这一站到下一站旅途总是停不下”<br>“我理解粉丝们为了支持他做的事情，更是心怀感激，因为爱一个人，任何行为都不为过，他们是最爱我的人”<br>“当你跟别人意见不同想争辩时，其实想想对错也没那么重要”<br>“希望大家都可以不用因为没钱去做自己不喜欢的事”<br>“比赛结果只是一时的，作品放在那里，只要有人听，有人懂，那就是有意义的”<br>“任何故事都让我变成现在的我<br>所以你们只了解我的现在就可以了”<br>“如果他喜欢的是变成明星之后的我<br>那他就不会喜欢之前的我<br>他既然喜欢了，为什么又要要求我像其他明星一样呢”<br>“给我个机会重来一次，我也不会想要去改变什么，因为有遗憾，才能显出来那些不遗憾的好”</p>
]]></content>
      <categories>
        <category>语录</category>
      </categories>
      <tags>
        <tag>语录</tag>
      </tags>
  </entry>
  <entry>
    <title>顺序表的存储</title>
    <url>/2020/06/20/%E9%A1%BA%E5%BA%8F%E8%A1%A8%E7%9A%84%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<h1 id="顺序表的存储实现"><a href="#顺序表的存储实现" class="headerlink" title="顺序表的存储实现"></a>顺序表的存储实现</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">	ElemType *data;</span><br><span class="line">	ElemType a[MAX];</span><br><span class="line">	<span class="keyword">int</span> <span class="built_in">size</span>;</span><br><span class="line">	<span class="keyword">int</span> length;</span><br><span class="line">&#125; SqList;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">InitList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> s)</span></span>;<span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ListLength</span><span class="params">(<span class="keyword">const</span> SqList &amp;L)</span></span>;<span class="comment">//表长</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">InsertList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,ElemType e)</span></span>;<span class="comment">//插入数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DispList</span><span class="params">(<span class="keyword">const</span> SqList &amp;L)</span></span>;<span class="comment">//遍历</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">GetdataList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span>;<span class="comment">//获取当前元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearList</span><span class="params">(SqList &amp;L)</span></span>;<span class="comment">//删除表</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DeleteList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,ElemType &amp;e)</span></span>;<span class="comment">//删除指定元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DestoryList</span><span class="params">(SqList &amp;L)</span></span>;<span class="comment">//摧毁表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">InitList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(s&lt;=<span class="number">0</span>) s=<span class="number">10</span>;</span><br><span class="line">	L.data = <span class="keyword">new</span> ElemType[s];</span><br><span class="line">	<span class="keyword">if</span>(L.data == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	L.<span class="built_in">size</span> = s;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//顺序表长</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ListLength</span><span class="params">(<span class="keyword">const</span> SqList &amp;L)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> L.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">InsertList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,ElemType e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(i&lt;<span class="number">1</span> || i&gt;L.length +<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	<span class="comment">//printf("\n未进行插入");</span></span><br><span class="line">	<span class="comment">//表满给表扩容</span></span><br><span class="line">	<span class="keyword">if</span>(L.<span class="built_in">size</span> == L.length) &#123;</span><br><span class="line">		ElemType *temp = <span class="keyword">new</span> ElemType[<span class="number">2</span>*L.<span class="built_in">size</span>];</span><br><span class="line">		<span class="keyword">if</span>(temp == <span class="literal">NULL</span> ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; L.length; i++)</span><br><span class="line">			temp[i] = L.data[i];</span><br><span class="line">		<span class="keyword">delete</span>[] L.data; <span class="comment">//删除原来空间的值</span></span><br><span class="line">		L.data = temp;</span><br><span class="line">		L.<span class="built_in">size</span> = L.<span class="built_in">size</span>*<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k = L.length<span class="number">-1</span>; k&gt;=i<span class="number">-1</span>; k--)</span><br><span class="line">		L.data[k+<span class="number">1</span>] = L.data[k];</span><br><span class="line">	L.data[i<span class="number">-1</span>] = e;</span><br><span class="line">	L.length++;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取当前元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">GetdataList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,ElemType &amp;e)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(i&gt;=<span class="number">1</span> &amp;&amp; i&lt;=L.length) &#123;</span><br><span class="line">		e = L.data[i<span class="number">-1</span>] ;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearList</span><span class="params">(SqList &amp;L)</span> </span>&#123;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除指定元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DeleteList</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> i,ElemType &amp;e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(i&gt;=<span class="number">1</span> &amp;&amp; i&lt;L.length) &#123;</span><br><span class="line">		e = L.data[i<span class="number">-1</span>];</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=i; k&lt;L.length; k++)</span><br><span class="line">			L.data[k<span class="number">-1</span>] = L.data[k];</span><br><span class="line">		<span class="comment">//printf("进入删除");</span></span><br><span class="line">		L.length--;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历顺序表元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DispList</span><span class="params">(<span class="keyword">const</span> SqList &amp;L)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;L.length; i++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>,L.data[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//摧毁表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DestoryList</span><span class="params">(SqList &amp;L)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">delete</span> [] L.data;</span><br><span class="line">	L.<span class="built_in">size</span> = <span class="number">0</span>;</span><br><span class="line">	L.length = <span class="number">0</span>;</span><br><span class="line">	L.data =<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	SqList L;</span><br><span class="line">	ElemType a=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(a) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n\t\t  顺序表展示\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"***********************************************\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"*    1：初始化表         2：插入数据          *\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"*    3：删除指定元素     4：输出顺序表        *\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"*    5：获取指定元素     6：删除表            *\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"*    7：摧毁表           8：退出              *\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"***********************************************\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"请输入操作序号："</span>);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">		<span class="keyword">switch</span>(a) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"初始化完成"</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">				<span class="comment">//InitList(L,2);</span></span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">7</span>; i++) &#123;</span><br><span class="line">					InsertList(L,i,i+<span class="number">1</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"插入成功\n"</span>);</span><br><span class="line">				DispList(L);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>: &#123;</span><br><span class="line">				<span class="keyword">int</span> a,x;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"请输入删除位置："</span>); </span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">				<span class="keyword">bool</span> re  = DeleteList(L,a,x);</span><br><span class="line">				<span class="keyword">if</span>(re==<span class="literal">true</span>)&#123;</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"删除的数据为：%d\n"</span>,x) ;</span><br><span class="line">					DispList(L);</span><br><span class="line">				&#125;<span class="keyword">else</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"删除失败"</span>); </span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>: &#123;</span><br><span class="line">				DispList(L); </span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>: &#123;</span><br><span class="line">				<span class="keyword">int</span> z,y;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"请输入获取元素的位置："</span>);</span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;z);</span><br><span class="line">				GetdataList(L,z,y);</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"获取的元素为：%d"</span>,y); </span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">6</span>: &#123;</span><br><span class="line">				ClearList(L);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">7</span>: &#123;</span><br><span class="line">				DestoryList(L);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"本次测试结束！\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n-----------------------------------------------\n\n"</span>) ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>顺序表</tag>
        <tag>C语言</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>单链表的存储</title>
    <url>/2020/06/25/%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<h1 id="单链表的存储实现"><a href="#单链表的存储实现" class="headerlink" title="单链表的存储实现"></a>单链表的存储实现</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">	ElemType data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode,*LinkList;</span><br><span class="line"></span><br><span class="line"><span class="function">LinkList <span class="title">CreateHead</span><span class="params">()</span></span>;<span class="comment">//头插法建立单链表 </span></span><br><span class="line"><span class="function">LinkList <span class="title">CreateTail</span><span class="params">()</span></span>;<span class="comment">//尾插法建立单链表 </span></span><br><span class="line"><span class="function">LNode *<span class="title">LocateElem</span><span class="params">(LinkList L,ElemType e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(LinkList L)</span></span>;<span class="comment">//遍历链表 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//头插法建立单链表 </span></span><br><span class="line"><span class="function">LinkList <span class="title">CreateHead</span><span class="params">()</span></span>&#123;</span><br><span class="line">	LNode *L = <span class="keyword">new</span> LNode;<span class="comment">//创建一个新的结点，并赋值给指针*L </span></span><br><span class="line">	<span class="comment">//L = (LinkList)malloc(sizeof(LNode));</span></span><br><span class="line">	LNode *s;</span><br><span class="line">	L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); </span><br><span class="line">	<span class="keyword">while</span>(x!=<span class="number">9999</span>)&#123;<span class="comment">//输入9999结束 </span></span><br><span class="line">		s = <span class="keyword">new</span> LNode;</span><br><span class="line">		<span class="comment">//s = (LNode)malloc(sizeof(LNode));//创建新结点 </span></span><br><span class="line">		s-&gt;data = x;</span><br><span class="line">		s-&gt;next = L-&gt;next;</span><br><span class="line">		L-&gt;next = s;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> L;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//尾插法建立单链表</span></span><br><span class="line"><span class="function">LinkList <span class="title">CreateTail</span><span class="params">()</span></span>&#123;</span><br><span class="line">	LNode *L = <span class="keyword">new</span> LNode;</span><br><span class="line">	LNode *s ,*r = L;</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">	<span class="keyword">while</span>(x!=<span class="number">9999</span>)&#123;</span><br><span class="line">		s = <span class="keyword">new</span> LNode;</span><br><span class="line">		s-&gt;data  = x;</span><br><span class="line">		r-&gt;next = s;</span><br><span class="line">		r = s;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">	&#125;</span><br><span class="line">	r-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">return</span> L;</span><br><span class="line">	</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//遍历链表 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(LinkList L)</span></span>&#123;</span><br><span class="line">	LNode *p = L-&gt;next;</span><br><span class="line">	<span class="keyword">while</span>(p)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,p-&gt;data);</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//按值查找元素</span></span><br><span class="line"><span class="function">LNode *<span class="title">LocateElem</span><span class="params">(LinkList L,ElemType e)</span></span>&#123;</span><br><span class="line">	LNode *p = L-&gt;next;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"进来\n"</span>);</span><br><span class="line">	<span class="keyword">while</span>(p)&#123;</span><br><span class="line">		<span class="keyword">if</span>(p-&gt;data == e)</span><br><span class="line">		<span class="keyword">return</span> p;</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">	</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	LNode *L;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请选择建立链表方法："</span>);</span><br><span class="line">	<span class="keyword">int</span> a;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">	<span class="keyword">if</span>(a == <span class="number">1</span>)&#123; </span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n请输入链表元素："</span>);</span><br><span class="line">		L = CreateHead();</span><br><span class="line">		<span class="built_in">display</span>(L);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n请输入链表元素："</span>);</span><br><span class="line">		L = CreateTail();</span><br><span class="line">		<span class="built_in">display</span>(L);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入查找的值："</span>);</span><br><span class="line">	<span class="keyword">int</span> b;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</span><br><span class="line">    LocateElem(L,b);</span><br><span class="line">	LNode *p = L-&gt;next;	</span><br><span class="line">    <span class="keyword">if</span>(b==p-&gt;data)&#123;</span><br><span class="line">    	<span class="built_in">printf</span>(<span class="string">"查找的值：%d"</span>,b);</span><br><span class="line">	&#125;<span class="keyword">else</span> </span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"未找到。"</span>); </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>数据结构</tag>
        <tag>单链表</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql数据库基本知识</title>
    <url>/2020/08/13/MySql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="MySql数据库基本知识"><a href="#MySql数据库基本知识" class="headerlink" title="MySql数据库基本知识"></a>MySql数据库基本知识</h1><h2 id="1、创建数据库"><a href="#1、创建数据库" class="headerlink" title="1、创建数据库"></a>1、创建数据库</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create database (数据表名称);</span><br></pre></td></tr></table></figure>

<h2 id="2、创建数据表-User"><a href="#2、创建数据表-User" class="headerlink" title="2、创建数据表(User)"></a>2、创建数据表(User)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table user(</span><br><span class="line">	id int(20) not null primary key,</span><br><span class="line">    name char(30) not null,</span><br><span class="line">    password char(30) not null    </span><br><span class="line">)engine&#x3D;Innodb default charset&#x3D;utf8;</span><br></pre></td></tr></table></figure>

<h2 id="3、插入数据"><a href="#3、插入数据" class="headerlink" title="3、插入数据"></a>3、插入数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">insert into user valuse(1,&#39;张三&#39;,&#39;123456&#39;);</span><br></pre></td></tr></table></figure>

<h2 id="4、删除数据库"><a href="#4、删除数据库" class="headerlink" title="4、删除数据库"></a>4、删除数据库</h2>]]></content>
  </entry>
  <entry>
    <title>Mybatis入门知识</title>
    <url>/2020/08/19/Mybatis%E5%85%A5%E9%97%A8%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h3 id="解决XML文件乱码问题"><a href="#解决XML文件乱码问题" class="headerlink" title="解决XML文件乱码问题"></a>解决XML文件乱码问题</h3><p><img src="C:%5CUsers%5CHuaJinL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200819231258844.png" alt="image-20200819231258844"></p>
]]></content>
  </entry>
  <entry>
    <title>重装系统的快乐。</title>
    <url>/2020/08/14/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%BF%AB%E4%B9%90%E3%80%82/</url>
    <content><![CDATA[<h1 id="计算机重装系统的快乐"><a href="#计算机重装系统的快乐" class="headerlink" title="计算机重装系统的快乐"></a>计算机重装系统的快乐</h1><h2 id="1、装机必备"><a href="#1、装机必备" class="headerlink" title="1、装机必备"></a>1、装机必备</h2><h2 id="2、编程软件"><a href="#2、编程软件" class="headerlink" title="2、编程软件"></a>2、编程软件</h2><h2 id="3、环境配置"><a href="#3、环境配置" class="headerlink" title="3、环境配置"></a>3、环境配置</h2>]]></content>
  </entry>
</search>
